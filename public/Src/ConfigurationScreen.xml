<Ui xmlns="http://www.blizzard.com/wow/ui/" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\FrameXML\UI.xsd"
>
<Frame name="ExpressYourElf_ConfigScreen" toplevel="true" frameStrata="DIALOG" movable="true" enableMouse="true" hidden="true" parent="UIParent" clampedToScreen="true">
    <Scripts>
        <OnLoad>
            self:RegisterForDrag("LeftButton")
            self:RegisterEvent("ADDON_LOADED")
            self:RegisterEvent("CHAT_MSG_WHISPER");
            self:RegisterEvent("PLAYER_FLAGS_CHANGED");

            local function eventHandler(ExpressYourElf_ConfigScreen, event, arg1, ...)
                if (event == "ADDON_LOADED" and arg1 == "ExpressYourElf") then
                    print("\124cffffcee2- Express Your Elf is loaded. To check options; type: " .. ExpressYourElfMessageColor ..  "/eyelf \124ror" .. ExpressYourElfMessageColor .. " /expressyourelf\124r.")
                    local date = C_AddOns.GetAddOnMetadata("ExpressYourElf", "X-ResetVarsDate") 

                    -- reset out of date addons
                    if (ExpressYourElfVars and ExpressYourElfVars.lastResetDate ~= date) then 
                        print(ExpressYourElfMessageColor .. '!! Config had to be reset because of new functionality.')
                        print(ExpressYourElfMessageColor .. '!! Other than the conversation buttons, all features have been moved to their own addon.')
                        print(ExpressYourElfMessageColor .. '!! 1 - For ressurrection, soulstone and speed messages, check out: Nurse Nancy on Curse')
                        print(ExpressYourElfMessageColor .. '!! 2 - For the answering machine, check out: AFK Answering Machine on Curse')
                        ExpressYourElfVars = nil
                    end

                    if (ExpressYourElfVars == nil) then 
                        ExpressYourElfVars = {};
                        ExpressYourElfVars.debugMode = false;
                        ExpressYourElfVars.lastResetDate = date;
                        ExpressYourElfVars.buttonFrame = {};
                        ExpressYourElfVars.buttonFrame.position = {};
                        ExpressYourElfVars.channel = "SAY";
                        ExpressYourElfVars.interfaceScale = 1;
                        ExpressYourElfVars.isShown = true;
                        ExpressYourElfVars.minimized = false;
                        ExpressYourElfVars.flirtConsent = false;
                        ExpressYourElfVars.allowMatureContent = false;
                        ExpressYourElfVars.bringBackRemoved = true;
                        ExpressYourElfVars.allowYoMamaContent = false;

                        -- show config screen when nothing is set
                        self:Show()
                    end

                    ExpressYourElf_ToggleMinimize(ExpressYourElfVars.minimized)
                    ExpressYourElf_ConfigScreen_ShowButtons:SetChecked(ExpressYourElfVars.isShown);
                    ExpressYourElf_ConfigScreen_MatureContent:SetChecked(ExpressYourElfVars.allowMatureContent);
                    ExpressYourElf_ConfigScreen_YoMammaContent:SetChecked(ExpressYourElfVars.allowYoMamaContent);
                    ExpressYourElf_ConfigScreen_FlirtConsent:SetChecked(ExpressYourElfVars.flirtConsent);
                    ExpressYourElf_ConfigScreen_Scale:SetValue(ExpressYourElfVars.interfaceScale);
                end
            end
            self:SetScript("OnEvent", eventHandler);
        </OnLoad>
        <OnDragStart>
            self:StartMoving()
        </OnDragStart>
        <OnDragStop>
            self:StopMovingOrSizing()
          </OnDragStop>
    </Scripts>

    <Size>
        <AbsDimension x="450" y="400"/>
    </Size>
    <Anchors>
        <Anchor point="CENTER"/>
    </Anchors>

    <Layers>
        <Layer level="BACKGROUND">
            <Texture name="$parent_Background" setAllPoints="true">
                <Color r="0" g="0" b="0" a="0.65" />
            </Texture> 	   
        </Layer>
        <Layer level="BORDER" textureSubLevel="-5">
            <Texture inherits="UI-Frame-InnerBotLeftCorner" parentKey="InsetBorderBottomLeft">
                <Anchors>
                    <Anchor point="BOTTOMLEFT"  x="0" y="0"/>
                </Anchors>
            </Texture>
            <Texture inherits="UI-Frame-InnerBotRight" parentKey="InsetBorderBottomRight">
                <Anchors>
                    <Anchor point="BOTTOMRIGHT"  x="0" y="0"/>
                </Anchors>
            </Texture>
            <Texture inherits="_UI-Frame-InnerBotTile" parentKey="InsetBorderTop">
                <Anchors>
                    <Anchor x="0" y="2" point="TOPLEFT" relativeKey="$parent.InsetBorderTopLeft" relativePoint="TOPRIGHT"/>
                    <Anchor x="0" y="2" point="TOPRIGHT" relativeKey="$parent.InsetBorderTopRight" relativePoint="TOPLEFT"/>
                </Anchors>
            </Texture>
            <Texture inherits="_UI-Frame-InnerBotTile" parentKey="InsetBorderBottom">
                <Anchors>
                    <Anchor point="BOTTOMLEFT" relativeKey="$parent.InsetBorderBottomLeft" relativePoint="BOTTOMRIGHT"/>
                    <Anchor point="BOTTOMRIGHT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="BOTTOMLEFT"/>
                </Anchors>
            </Texture>
            <Texture inherits="!UI-Frame-InnerLeftTile" parentKey="InsetBorderLeft">
                <Anchors>
                    <Anchor point="TOPLEFT" x="0" y="0"/>
                    <Anchor point="BOTTOMLEFT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="TOPLEFT"/>
                </Anchors>
            </Texture>
            <Texture inherits="!UI-Frame-InnerRightTile" parentKey="InsetBorderRight">
                <Anchors>
                    <Anchor point="TOPRIGHT"  x="0" y="0"/>
                    <Anchor point="BOTTOMRIGHT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="TOPRIGHT"/>
                </Anchors>
            </Texture>
        </Layer>
        <Layer level="ARTWORK">
            <Texture name="ExpressYourElf_ConfigScreen_Header" file="Interface\DialogFrame\UI-DialogBox-Header">
                <Size>
                    <AbsDimension x="356" y="64"/>
                </Size>
                <Anchors>
                    <Anchor point="TOP">
                        <Offset>
                            <AbsDimension x="0" y="18"/>
                        </Offset>
                    </Anchor>
                </Anchors>
            </Texture>
            <FontString inherits="GameFontNormal" text="Express your Elf">
                <Anchors>
                    <Anchor point="TOP" relativeTo="ExpressYourElf_ConfigScreen_Header">
                        <Offset>
                            <AbsDimension x="0" y="-14"/>
                        </Offset>
                    </Anchor>
                </Anchors>
            </FontString>
            <FontString name="buttonInterfaceText" inherits="GameFontNormalSmall" text="Show or hide Conversation Buttons">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_ShowButtons" x="50" y="-50"/>
                </Anchors>
            </FontString>
            <FontString name="buttonInterfaceText" inherits="GameFontNormalSmall" text="You can move the buttons by dragging the header.">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_ShowButtons" x="20" y="-130"/>
                </Anchors>
            </FontString>
            <FontString name="buttonInterfaceText" inherits="GameFontNormalSmall" text="To miminize the frame, just click on the right button inside of the header.">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_ShowButtons" x="20" y="-150"/>
                </Anchors>
            </FontString>

            <!-- flirt consent -->
            <FontString name="buttonInterfaceText" inherits="GameFontNormalSmall" text="If you don't know other's people age or intention, be aware with flirting. ">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_FlirtConsent" x="50" y="-200"/>
                </Anchors>
            </FontString>
            <FontString name="buttonInterfaceText" inherits="GameFontNormalSmall" text="To allow flirting within Express Your Elf, check the box to acknowledge you">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_FlirtConsent" x="50" y="-215"/>
                </Anchors>
            </FontString>
            <FontString name="buttonInterfaceText" inherits="GameFontNormalSmall" text="are aware that some players may be minors. Or as minor, you may engage">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_FlirtConsent" x="50" y="-230"/>
                </Anchors>
            </FontString>
            <FontString name="buttonInterfaceText" inherits="GameFontNormalSmall" text="a conversation with adults, and may be illegal.">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_FlirtConsent" x="50" y="-245"/>
                </Anchors>
            </FontString>
            <!-- mature content -->
            <FontString name="buttonInterfaceText" inherits="GameFontNormalSmall" text="Allow expressing mature content to others">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_MatureContent" x="50" y="-310"/>
                </Anchors>
            </FontString>
        </Layer>
    </Layers>
    <Frames>
        <Button name="$parentButtonClose" inherits="UIPanelCloseButton" >
            <Anchors>
                <Anchor point="TOPRIGHT" relativePoint="TOPRIGHT">
                    <Offset>
                        <AbsDimension x="8" y="8"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>ExpressYourElf_ConfigScreen:Hide()</OnClick>
            </Scripts>
        </Button>

        <CheckButton name="ExpressYourElf_ConfigScreen_ShowButtons" inherits="UIPanelButtonTemplate" motionScriptsWhileDisabled="true" virtual="false">
            <Size> 
                <AbsDimension x="25" y="25"/> 
            </Size>
            <Anchors>
                <Anchor point="TOPLEFT">
                    <Offset>
                        <AbsDimension x="20" y="-40"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>
                    if ( ExpressYourElf_ConfigScreen_ShowButtons:GetChecked() ) then 
                        ExpressYourElf_ShowButtons()
                    else 
                        ExpressYourElf_HideButtons()
                    end
                </OnClick>
            </Scripts>
            <NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
            <PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
            <HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
            <CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
            <DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
        </CheckButton>


 <CheckButton name="ExpressYourElf_ConfigScreen_FlirtConsent" inherits="UIPanelButtonTemplate" motionScriptsWhileDisabled="true" virtual="false">
            <Size> 
                <AbsDimension x="25" y="25"/> 
            </Size>
            <Anchors>
                <Anchor point="TOPLEFT">
                    <Offset>
                        <AbsDimension x="20" y="-200"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>
                    if ( ExpressYourElf_ConfigScreen_FlirtConsent:GetChecked() ) then 
                        ExpressYourElf_ConsentToFlirt()
                    else 
                        ExpressYourElf_DoNotConsentToFlirt()
                    end
                </OnClick>
            </Scripts>
            <NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
            <PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
            <HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
            <CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
            <DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
        </CheckButton>

        <CheckButton name="ExpressYourElf_ConfigScreen_MatureContent" inherits="UIPanelButtonTemplate" motionScriptsWhileDisabled="true" virtual="false">
            <Size> 
                <AbsDimension x="25" y="25"/> 
            </Size>
            <Anchors>
                <Anchor point="TOPLEFT">
                    <Offset>
                        <AbsDimension x="20" y="-300"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>
                    if ( ExpressYourElf_ConfigScreen_MatureContent:GetChecked() ) then 
                        ExpressYourElf_AllowMatureContent()
                    else 
                        ExpressYourElf_DisallowMatureContent()
                    end
                </OnClick>
            </Scripts>
            <NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
            <PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
            <HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
            <CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
            <DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
        </CheckButton>
        
        <CheckButton name="ExpressYourElf_ConfigScreen_YoMammaContent" inherits="UIPanelButtonTemplate" motionScriptsWhileDisabled="true" virtual="false">
            <Size> 
                <AbsDimension x="25" y="25"/> 
            </Size>
            <Anchors>
                <Anchor point="TOPLEFT">
                    <Offset>
                        <AbsDimension x="20" y="-400"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>
                    if ( ExpressYourElf_ConfigScreen_YoMamaContent:GetChecked() ) then 
                        ExpressYourElf_AllowYoMamaContent()
                    else 
                        ExpressYourElf_DisallowYoMamaContent()
                    end
                </OnClick>
            </Scripts>
            <NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
            <PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
            <HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
            <CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
            <DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
        </CheckButton>

       

        <!-- <CheckButton name="ExpressYourElf_ConfigScreen_BombsGoBurr" inherits="UIPanelButtonTemplate" motionScriptsWhileDisabled="true" virtual="false">
            <Size> 
                <AbsDimension x="25" y="25"/> 
            </Size>
            <Anchors>
                <Anchor point="TOPLEFT" relativePoint="TOPLEFT">
                    <Offset>
                        <AbsDimension x="20" y="-170"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>
                    if (ExpressYourElf_ConfigScreen_BombsGoBurr:GetChecked() == true) then 
                        ExpressYourElf_BombsGoBurrOn()
                    else 
                        ExpressYourElf_BombsGoBurrOff()
                    end
                </OnClick>
            </Scripts>
            <NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
            <PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
            <HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
            <CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
            <DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
        </CheckButton> -->

        <Slider name="ExpressYourElf_ConfigScreen_Scale" inherits="OptionsSliderTemplate" minValue="0.1" maxValue="1" valueStep="0.1">
            <Size x="185" y="16" />
            <Anchors>
                <Anchor point="TOPLEFT" relativeKey="$parent.OutputDeviceDropdown" relativePoint="TOPLEFT" x="182" y="-85" />
            </Anchors>
            <Layers>
                <Layer level="ARTWORK">
                    <FontString name="$parentLabel" parentKey="Label" inherits="GameFontNormalSmall" text="Conversation Buttons scale">
                        <Anchors>
                            <Anchor point="LEFT" relativePoint="LEFT" x="-160" y="0"/>
                        </Anchors>
                    </FontString>
                </Layer>
            </Layers>
            <Scripts>
                <OnValueChanged>ExpressYourElf_SetScale(value)</OnValueChanged>
            </Scripts>
        </Slider>
    </Frames> 
</Frame>
</Ui>
