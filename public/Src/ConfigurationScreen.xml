<Ui xmlns="http://www.blizzard.com/wow/ui/" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\FrameXML\UI.xsd"
>
<Frame name="ExpressYourElf_ConfigScreen" toplevel="true" frameStrata="DIALOG" movable="true" enableMouse="true" hidden="true" parent="UIParent" clampedToScreen="true">
    <Scripts>
        <OnLoad>
            self:RegisterForDrag("LeftButton")
            self:RegisterEvent("ADDON_LOADED")
            self:RegisterEvent("CHAT_MSG_WHISPER");
            self:RegisterEvent("PLAYER_FLAGS_CHANGED");

            local function eventHandler(ExpressYourElf_ConfigScreen, event, arg1, ...)
                if (event == "ADDON_LOADED" and arg1 == "ExpressYourElf") then
                    print("\124cffffcee2Express Your Elf is loaded. To check options; type: " .. ExpressYourElfMessageColor ..  "/eyelf \124ror" .. ExpressYourElfMessageColor .. " /expressyourelf\124r.")
                    local date = GetAddOnMetadata("ExpressYourElf", "X-ResetVarsDate") 

                    -- reset out of date addons
                    if (ExpressYourElfVars and ExpressYourElfVars.lastResetDate ~= date) then 
                        print(ExpressYourElfMessageColor .. 'Config had to be reset because of new functionality.')
                        ExpressYourElfVars = nil
                    end

                    if (ExpressYourElfVars == nil) then 
                        ExpressYourElfVars = {};
                        ExpressYourElfVars.debugMode = false;
                        ExpressYourElfVars.lastResetDate = date;
                        ExpressYourElfVars.buttonFrame = {};
                        ExpressYourElfVars.buttonFrame.position = {};
                        ExpressYourElfVars.channel = "SAY";
                        ExpressYourElfVars.nurseNancyIsOn = true;
                        ExpressYourElfVars.answeringMachineIsOn = true;
                        ExpressYourElfVars.usePrefix = true;
                        ExpressYourElfVars.bombsGoBurrIsOn = true;
                        ExpressYourElfVars.interfaceScale = 1;
                        ExpressYourElfVars.isShown = false;

                        -- show config screen when nothing is set
                        self:Show()
                    end

                    ExpressYourElf_ConfigScreen_ShowButtons:SetChecked(ExpressYourElfVars.isShown);
                    ExpressYourElf_ConfigScreen_AnsweringMachine:SetChecked(ExpressYourElfVars.answeringMachineIsOn);
                    ExpressYourElf_ConfigScreen_NurseNancy:SetChecked(ExpressYourElfVars.nurseNancyIsOn);
                    ExpressYourElf_ConfigScreen_BombsGoBurr:SetChecked(ExpressYourElfVars.bombsGoBurrIsOn);
                    ExpressYourElf_ConfigScreen_Scale:SetValue(ExpressYourElfVars.interfaceScale);
                end

                if (ExpressYourElfVars.answeringMachineIsOn == true and (event == "CHAT_MSG_WHISPER" or (event == "PLAYER_FLAGS_CHANGED" and arg1 == "player"))) then
                    if (event == "PLAYER_FLAGS_CHANGED") then 
                        ExpressYourElf.AnsweringMachine.run() -- prevent that first times not doing anithing
                    end 
                    
                    if (event == "CHAT_MSG_WHISPER") then 
                        ExpressYourElf.AnsweringMachine.run();
                    end 
                end
            end
            self:SetScript("OnEvent", eventHandler);
        </OnLoad>
        <OnDragStart>
            self:StartMoving()
        </OnDragStart>
        <OnDragStop>
            self:StopMovingOrSizing()
          </OnDragStop>
    </Scripts>

    <Size>
        <AbsDimension x="500" y="330"/>
    </Size>
    <Anchors>
        <Anchor point="CENTER"/>
        <Offset><AbsDimension x="0" y="0"/></Offset>
    </Anchors>

    <Layers>
        <Layer level="BACKGROUND">
            <Texture name="$parent_Background" setAllPoints="true">
                <Color r="0" g="0" b="0" a="0.65" />
                <Backdrop bgFile="Interface\TutorialFrame\TutorialFrameBackground"
                    edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                    <EdgeSize val="16"/>
                    <TileSize val="32"/>
                    <BackgroundInsets left="5" right="5" top="5" bottom="5"/>
                </Backdrop>
            </Texture> 	   
        </Layer>
        <Layer level="BORDER" textureSubLevel="-5">
            <Texture inherits="UI-Frame-InnerBotLeftCorner" parentKey="InsetBorderBottomLeft">
                <Anchors>
                    <Anchor point="BOTTOMLEFT"  x="0" y="0"/>
                </Anchors>
            </Texture>
            <Texture inherits="UI-Frame-InnerBotRight" parentKey="InsetBorderBottomRight">
                <Anchors>
                    <Anchor point="BOTTOMRIGHT"  x="0" y="0"/>
                </Anchors>
            </Texture>
            <Texture inherits="_UI-Frame-InnerBotTile" parentKey="InsetBorderTop">
                <Anchors>
                    <Anchor x="0" y="2" point="TOPLEFT" relativeKey="$parent.InsetBorderTopLeft" relativePoint="TOPRIGHT"/>
                    <Anchor x="0" y="2" point="TOPRIGHT" relativeKey="$parent.InsetBorderTopRight" relativePoint="TOPLEFT"/>
                </Anchors>
            </Texture>
            <Texture inherits="_UI-Frame-InnerBotTile" parentKey="InsetBorderBottom">
                <Anchors>
                    <Anchor point="BOTTOMLEFT" relativeKey="$parent.InsetBorderBottomLeft" relativePoint="BOTTOMRIGHT"/>
                    <Anchor point="BOTTOMRIGHT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="BOTTOMLEFT"/>
                </Anchors>
            </Texture>
            <Texture inherits="!UI-Frame-InnerLeftTile" parentKey="InsetBorderLeft">
                <Anchors>
                    <Anchor point="TOPLEFT" x="0" y="0"/>
                    <Anchor point="BOTTOMLEFT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="TOPLEFT"/>
                </Anchors>
            </Texture>
            <Texture inherits="!UI-Frame-InnerRightTile" parentKey="InsetBorderRight">
                <Anchors>
                    <Anchor point="TOPRIGHT"  x="0" y="0"/>
                    <Anchor point="BOTTOMRIGHT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="TOPRIGHT"/>
                </Anchors>
            </Texture>
        </Layer>
        <Layer level="ARTWORK">
            <Texture name="ExpressYourElf_ConfigScreen_Header" file="Interface\DialogFrame\UI-DialogBox-Header">
                <Size>
                    <AbsDimension x="356" y="64"/>
                </Size>
                <Anchors>
                    <Anchor point="TOP">
                        <Offset>
                            <AbsDimension x="0" y="18"/>
                        </Offset>
                    </Anchor>
                </Anchors>
            </Texture>
            <FontString inherits="GameFontNormal" text="Express your Elf">
                <Anchors>
                    <Anchor point="TOP" relativeTo="ExpressYourElf_ConfigScreen_Header">
                        <Offset>
                            <AbsDimension x="0" y="-14"/>
                        </Offset>
                    </Anchor>
                </Anchors>
            </FontString>
            <FontString name="nurseNancyText" inherits="GameFontNormalSmall" text="Auto ressurrection lines (soulstone, battle ress, ress, mass ress)">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_NurseNancy" x="50" y="-116"/>
                </Anchors>
            </FontString>
            <FontString name="answeringMachineText" inherits="GameFontNormalSmall" text="AFK Answering Machine">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_AnsweringMachine" x="50" y="-146"/>
                </Anchors>
            </FontString>
            <FontString name="bombsGoBurrText" inherits="GameFontNormalSmall" text="Heroism/Bloodlust announcer">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_BombsGoBurr" x="50" y="-176"/>
                </Anchors>
            </FontString>
            <FontString name="buttonInterfaceText" inherits="GameFontNormalSmall" text="Show or hide Conversation Buttons">
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="ExpressYourElf_ConfigScreen_ShowButtons" x="50" y="-206"/>
                </Anchors>
            </FontString>
        </Layer>
    </Layers>
    <Frames>
        <Button name="$parentButtonClose" inherits="UIPanelCloseButton" >
            <Anchors>
                <Anchor point="TOPRIGHT" relativePoint="TOPRIGHT">
                    <Offset>
                        <AbsDimension x="8" y="8"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>ExpressYourElf_ConfigScreen:Hide()</OnClick>
            </Scripts>
        </Button>

        <CheckButton name="ExpressYourElf_ConfigScreen_ShowButtons" inherits="OptionsCheckButtonTemplate" motionScriptsWhileDisabled="true" virtual="false">
            <Size> 
                <AbsDimension x="25" y="25"/> 
            </Size>
            <Anchors>
                <Anchor point="TOPLEFT">
                    <Offset>
                        <AbsDimension x="20" y="-200"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>
                    if ( ExpressYourElf_ConfigScreen_ShowButtons:GetChecked() ) then 
                        ExpressYourElf_ShowButtons()
                    else 
                        ExpressYourElf_HideButtons()
                    end
                </OnClick>
            </Scripts>
            <NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
            <PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
            <HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
            <CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
            <DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
        </CheckButton>

        <CheckButton name="ExpressYourElf_ConfigScreen_NurseNancy" inherits="OptionsCheckButtonTemplate" motionScriptsWhileDisabled="true" virtual="false">
            <Size> 
                <AbsDimension x="25" y="25"/> 
            </Size>
            <Anchors>
                <Anchor point="TOPLEFT" relativePoint="TOPLEFT">
                    <Offset>
                        <AbsDimension x="20" y="-110"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>
                    if (ExpressYourElf_ConfigScreen_NurseNancy:GetChecked() == true) then 
                        ExpressYourElf_NurseNancyOn()
                    else 
                        ExpressYourElf_NurseNancyOff()
                    end
                </OnClick>
            </Scripts>
            <NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
            <PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
            <HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
            <CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
            <DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
        </CheckButton>


            
        <CheckButton name="ExpressYourElf_ConfigScreen_AnsweringMachine" inherits="OptionsCheckButtonTemplate" motionScriptsWhileDisabled="true" virtual="false">
            <Size> 
                <AbsDimension x="25" y="25"/> 
            </Size>
            <Anchors>
                <Anchor point="TOPLEFT" relativePoint="TOPLEFT">
                    <Offset>
                        <AbsDimension x="20" y="-140"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>
                    if ( ExpressYourElf_ConfigScreen_AnsweringMachine:GetChecked() == true ) then 
                        ExpressYourElf_AnsweringMachineOn()
                    else 
                        ExpressYourElf_AnsweringMachineOff()
                    end
                </OnClick>
            </Scripts>
            <NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
            <PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
            <HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
            <CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
            <DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
        </CheckButton>

        <CheckButton name="ExpressYourElf_ConfigScreen_BombsGoBurr" inherits="OptionsCheckButtonTemplate" motionScriptsWhileDisabled="true" virtual="false">
            <Size> 
                <AbsDimension x="25" y="25"/> 
            </Size>
            <Anchors>
                <Anchor point="TOPLEFT" relativePoint="TOPLEFT">
                    <Offset>
                        <AbsDimension x="20" y="-170"/>
                    </Offset>
                </Anchor>
            </Anchors>
            <Scripts>
                <OnClick>
                    if (ExpressYourElf_ConfigScreen_BombsGoBurr:GetChecked() == true) then 
                        ExpressYourElf_BombsGoBurrOn()
                    else 
                        ExpressYourElf_BombsGoBurrOff()
                    end
                </OnClick>
            </Scripts>
            <NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
            <PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
            <HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
            <CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
            <DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
        </CheckButton>

        <Slider name="ExpressYourElf_ConfigScreen_Scale" inherits="OptionsSliderTemplate" minValue="0.1" maxValue="1" valueStep="0.1">
            <Size x="185" y="16" />
            <Anchors>
                <Anchor point="TOPLEFT" relativeKey="$parent.OutputDeviceDropdown" relativePoint="TOPLEFT" x="210" y="-225" />
            </Anchors>
            <Layers>
                <Layer level="ARTWORK">
                    <FontString name="$parentLabel" parentKey="Label" inherits="GameFontNormalSmall" text="Conversation Buttons scale">
                        <Anchors>
                            <Anchor point="LEFT" relativePoint="LEFT" x="-160" y="0"/>
                        </Anchors>
                    </FontString>
                </Layer>
            </Layers>
            <Scripts>
                <OnValueChanged>ExpressYourElf_SetScale(value)</OnValueChanged>
            </Scripts>
        </Slider>

        <Button name="ExpressYourElf_ConfigScreen_MoveFrame_ON" inherits="UIPanelButtonTemplate" text="Move buttons">
            <Size x="120" y="35"/>
            <Anchors>
                <Anchor point="LEFT" relativeTo="$parent" relativePoint="TOPLEFT" x="15" y="-280" />
            </Anchors>
            <Scripts>
                <OnClick>
                    ExpressYourElf_StartMoving()
                </OnClick>
            </Scripts>
        </Button>

        <Button name="ExpressYourElf_ConfigScreen_MoveFrame_OFF" inherits="UIPanelButtonTemplate" text="Lock buttons">
            <Anchors>
                <Anchor point="LEFT" relativeTo="$parent" relativePoint="TOPLEFT" x="140" y="-280" />
            </Anchors>
            <Size x="120" y="35"/>
            <Scripts>
                <OnClick>
                    ExpressYourElf_StopMoving()
                </OnClick>
            </Scripts>
        </Button>
    </Frames> 
</Frame>
</Ui>
